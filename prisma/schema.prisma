generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// model User {
//   id Int @id @default(autoincrement())
//   username String @unique
//   email String? @unique
//   password String?
//   phone String? @unique
//   github_id String? @unique
//   avatar String?
//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt

//   SMSToken SMSToken[]
// }

// model SMSToken {
//   id Int @id @default(autoincrement())
//   token String @unique
//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt
//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId Int
// }

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  email String @unique
  bio String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Tweet Tweet[]
  Like Like[]
}

model Tweet {
  id Int @id @default(autoincrement())
  tweet String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  Like Like[]

  @@index([userId(sort: Desc)])
}

model Like {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  tweet Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
  @@unique([userId, tweetId])
}
